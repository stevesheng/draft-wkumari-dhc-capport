<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC "" ".//reference.RFC.2119.xml">
]>
<!-- WK: Set category, IPR, docName -->
<rfc category="info" docName="draft-wkumari-dhc-capport-07" ipr="trust200902">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc="yes" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="yes"?>

  <?rfc iprnotified="no" ?>

  <?rfc strict="yes"?>

  <?rfc compact="yes" ?>

  <front>
    <!--c WK: Set long title. -->

    <title abbrev="DHCP Captive-Portal">Captive-Portal identification in DHCP
    / RA</title>

    <author fullname="Warren Kumari" initials="W." surname="Kumari">
      <organization>Google</organization>

      <address>
        <postal>
          <street>1600 Amphitheatre Parkway</street>

          <city>Mountain View, CA</city>

          <code>94043</code>

          <country>US</country>
        </postal>

        <email>warren@kumari.net</email>
      </address>
    </author>

    <author fullname="Olafur Gudmundsson" initials="O." surname="Gudmundsson">
      <organization>Shinkuro Inc.</organization>

      <address>
        <postal>
          <street>4922 Fairmont Av, Suite 250</street>

          <city>Bethesda</city>

          <region>MD</region>

          <code>20814</code>

          <country>USA</country>
        </postal>

        <email>ogud@ogud.com</email>
      </address>
    </author>

    <author fullname="Paul Ebersman" initials="P." surname="Ebersman">
      <organization>Comcast</organization>

      <address>
        <email>ebersman-ietf@dragon.net</email>
      </address>
    </author>

    <author fullname="Steve Sheng" initials="S." surname="Sheng">
      <organization abbrev="ICANN">Internet Corporation for Assigned Names and
      Numbers</organization>

      <address>
        <postal>
          <street>12025 Waterfront Drive, Suite 300</street>

          <country>United States of America</country>

          <code>90094</code>

          <city>Los Angeles</city>
        </postal>

        <phone>+1.310.301.5800</phone>

        <email>steve.sheng@icann.org</email>
      </address>
    </author>

    <date day="22" month="December" year="2014"/>

    <abstract>
      <t>In many environments (such as hotels, coffee shops and other
      establishments that offer Internet service to customers), it is common
      to start new connections in a captive portal mode, i.e. highly restrict
      what the customer can do until the customer has accepted terms of
      service, provided payment information and / or authenticated.</t>

      <t>This document describes a DHCP option (and an RA extension) to inform
      clients that they are behind some sort of captive portal device, and
      that they will need to authenticate to get Internet Access.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>In many environments, users need to connect to a captive portal
      device and agree to an acceptable use policy and / or provide billing
      information before they can access the Internet.</t>

      <t>In order to present the user with the captive portal web page, many
      devices perform DNS and / or HTTP and / or IP hijacks. In addition to
      being kludgy hacks, these techniques resemble attacks that DNSSEC and
      TLS are intended to protect against. In an attempt to discourage the
      deliberate subversion of basic security tools, this document describes a
      DHCP option (Captive-Portal) and an IPv6 Router Advertisement (RA)
      extension that informs clients that they are behind a captive portal
      device, and how to contact it.</t>

      <t>This document neither condones nor condemns the use of captive
      portals; instead, it recognises that their apparent necessity, and
      attempts to improve the user experience.</t>

      <t>The technique described in this document mainly improve the user
      experience when first connecting to a network behind a captive portal.
      It may also help if the captive portal access times out after
      connecting, but this is less reliable.</t>

      <section title="Requirements notation">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119"/>.</t>
      </section>
    </section>

    <section title="Background">
      <t>Many Internet Service Providers (ISPs) that offer public Internet
      access require the user to accept an Acceptable Use Policy (AUP) and /
      or provides billing information (such as their last name and room number
      in a hotel, credit card information, etc.) through a web interface
      before the user can access the Internet.</t>

      <t>In order to meet this requirement, some ISPs implement a captive
      portal (CP) - a system that intercepts user requests and redirects them
      to an interstitial login page.</t>

      <t>Captive portals intercept and redirects user requests in a number of
      ways, including:</t>

      <t><list style="symbols">
          <t>DNS Redirection</t>

          <t>IP Redirection</t>

          <t>HTTP Redirection</t>

          <t>Restricted scope addresses</t>

          <t>Traffic blocking (until the user is authenticated)</t>
        </list>In order to ensure that the user is unable to access the
      Internet until they have satisfied the requirements, captive portals
      usually implement IP based filters, or place the user into a restricted
      VLAN (or restricted IP range) until after they have been authorized /
      satisfied.</t>

      <t>These techniques are very similar to attacks that protocols (such as
      VPNs, DNSSEC, TLS) are designed to protect against. The interaction of
      the these protections and the interception leads to poor user
      experiences, such as long timeouts, inability to reach the captive
      portal web page, etc. The interception may also leak user information
      (for example, if the captive portal intercepts and logs an HTTP Cookie,
      or URL of the form http://fred:password@example.com). The user is often
      unaware of what is causing the issue (their browser appears to hang,
      saying something like "Downloading Proxy Script", or simply "The
      Internet doesn't work"), and they become frustrated. This may results in
      them not purchasing the Internet access provided by the captive portal.
      The connectivity attempts may also facilitate OS fingerprinting even
      before a client attempts to connect to the portal itself.</t>

      <section title="DNS Redirection">
        <t>The CP either intercepts all DNS traffic or advertises itself (for
        example using DHCP) as the recursive server for the network. Until the
        user has authenticated to the captive portal, the CP responds to all
        DNS requests listing the address of its web portal. Once the user has
        authenticated the CP returns the "correct" addresses.</t>

        <t>This technique has many shortcomings. It fails if the client is
        performing DNSSEC validation, is running their own resolver, is using
        a VPN, or already has the DNS information cached.</t>
      </section>

      <section title="HTTP Redirection">
        <t>In this implementation, the CP acts like a transparent HTTP proxy;
        but when it sees an HTTP request from an unauthenticated client using
        HTTP/1.0, it intercepts the request and responds with an HTTP status
        code 302 to redirect the client to the Captive Portal Login. If the
        client is using HTTP/1.1, we respond with a status code 303 See
        Other.</t>

        <t>This technique has a number of issues, including:</t>

        <t><list style="symbols">
            <t>It fails if the user is only using HTTPS.</t>

            <t>It exposes various private user information, such as HTTP
            Cookies, etc.</t>

            <t>It doesn't work if the client has a VPN and / or proxies their
            web traffic to an external web proxy.</t>
          </list></t>
      </section>

      <section title="IP Hijacking">
        <t>In this scenario, the captive portal intercepts connections to any
        IP address. It spoofs the destination IP address and "pretends" to be
        whatever the user tried to access.</t>

        <t>This technique has issues similar to the HTTP solution, but may
        also break other protocols, and may expose more of the user's private
        information.</t>
      </section>
    </section>

    <section title="The Captive-Portal DHCP Option">
      <t>The Captive Portal DHCP Option (TBA1) informs the DHCP client that it
      is behind a captive portal and provides the URI to access an
      authentication page. This is primarily intended to improve the user
      experience; for the foreseeable future (until such time that most
      systems implement this technique) captive portals will still need to
      implement the interception techniques to serve legacy clients.</t>

      <t>The format of the DHCP Captive-Portal DHCP option is shown
      below.<figure>
          <artwork><![CDATA[  Code    Len          Data
  +------+------+------+------+------+--   --+-----+
  | code |  len |  URI                  ...        |
  +------+------+------+------+------+--   --+-----+
]]></artwork>
        </figure></t>

      <t><list style="symbols">
          <t>Code: The Captive-Portal DHCP Option (TBA1 for DHCPv4, TBA2 for
          DHCPv6)</t>

          <t>Len: The length, in octets of the URI.</t>

          <t>URI: The URI of the authentication page that the user should
          connect to.</t>
        </list></t>

      <t>The URI MUST NOT contain a DNS name, in order to not require the CP
      to access DNS queries from an unauthenticated user. Rather, if IPv4 is
      supported in the network, one option's URI MUST contain an IPv4 address
      literal, and if IPv6 is supported in the network, one option's URI MUST
      contain an IPv6 address literal. Note that this implies that a dual
      stack network would include two such options in its DHCP reply or
      RA.</t>

      <t>In many cases, a CP would like to collect billing infomation (for
      example, credit card information), and will want to do this over
      SSL/TLS. In order to make this work, the web server on the IP literal
      can redirect to a URI containing a DNS name. The CP implementor/operator
      will need to ensure that the client machine can access this URI and all
      service needed to make that work (for example, DNS, etc.). In this case,
      the operator/implementor will potentially need to deal with issues such
      as DNS tunnelling.</t>

      <t>Captive Portals are free to serve a HTTP redirect on this address to
      a DNS name (for example, so they can provide a TLS protected web page
      for credit card information). This will require that the client be able
      to perform DNS requests.</t>

      <t>[ED NOTE: Using an address literal is less than ideal, but better
      than the alternatives. Recommending a DNS name means that the CP would
      need to allow DNS from unauthenticated clients (as we don't want to
      force users to use the CP's provided DNS) and some users would use this
      to DNS Tunnel out. This would make the CP admin block external
      recursives).]</t>
    </section>

    <section title="The Captive-Portal RA Option">
      <t>[Ed: I'm far from an RA expert. I think there are only 8 bits for
      Type, is it worth burning an option code on this? I have also specified
      that the option length should padded to multiples of 8 byte to better
      align with the examples I've seen. Is this required / preferred, or is
      smaller RAs better? ]</t>

      <t>This section describes the Captive-Portal Router Advertisement
      option.</t>

      <t><figure>
          <artwork><![CDATA[ 0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |     Length    |              URI              .
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               .
   .                                                               .
   .                                                               .
   .                                                               .
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
            Figure 2: Captive-Portal RA Option Format]]></artwork>
        </figure></t>

      <t><list style="hanging">
          <t hangText="Type">TBA3</t>

          <t hangText="Length">8-bit unsigned integer. The length of the
          option (including the Type and Length fields) in units of 8
          bytes.</t>

          <t hangText="URI">The URI (containing an IPv6 literal) of the
          authentication page that the user should connect to. This should be
          padded with NULL (0x0) to make the total option length (including
          the Type and Length fields) a multiple of 8 bytes.</t>
        </list></t>
    </section>

    <section title="Use of the Captive-Portal Option">
      <t>[ED NOTE: This option provides notice to the OS / User applications
      that there is a CP. Because of differences in UI design between
      Operating Systems, the exact behaviour by OS and Applications is left to
      the OS vendor/Application Developer.]</t>

      <t>The purpose of the Captive-Portal Option is to inform the operating
      system and applications that they are behind a captive portal type
      device and will need to authenticate before getting network access (and
      how to reach the authentication page). What is done with this
      information is left up to the operating system and application vendors.
      This document provides a very high level example of what could be done
      with this information.</t>

      <t>Many operating systems / applications already include a "connectivity
      test" to determine if they are behind a captive portal (for example,
      attempting to fetch a specific URL and looking for a specific string
      (such as "Success")). These tests sometimes fail or take a long time to
      determine when they are behind a CP, but are usually effective for
      determining that the captive portal has been satisfied. These tests will
      continue to be needed, because there is currently no definitive signal
      from the captive portal that it has been satisfied. [ Editor note: It
      may be useful to write another document that specifies how a client can
      determine that it has passed the CP. This document could also contain
      advice to implmentors on only intercepting actually needed ports, how to
      advertise that the CP needs to be statisfied *again*, etc. This should
      not be done in this document though. ] The connectivity test may also
      need to be used if the captive portal times out the user session and
      needs the user to re-authenticate / pay again. The operating system may
      still find the information about the captive portal URI useful in this
      case.</t>

      <t>When the device is informed that it is behind a captive portal it
      SHOULD:</t>

      <t><list style="numbers">
          <t> Not initiate new IP connections until the CP has been satisfied
          (other than those to the captive portal browser session and
          connectivity checks). Existing connections should be quiesced (this
          will happen more often than some expect -- for example, the user
          purchases 1 hour of Internet at a cafe and stays there for 3 hours
          -- this will "interrupt" the user a few times).</t>

          <t>Present a dialog box to the user informing them that they are
          behind a captive portal and ask if they wish to proceed.</t>

          <t>If the user elects to proceed, the device should initiate a
          connection to the captive portal login page using a web browser
          configured with a separate cookie store, and without a proxy server.
          If there is a VPN in place, this connection should be made outside
          of the VPN and the user should be informed that connection is
          outside the VPN. Some captive portals send the user a cookie when
          they authenticate (so that the user can re-authenticate more easily
          in the future) - the browser should keep these CP cookies separate
          from other cookies.</t>

          <t>Once the user has authenticated, normal IP connectivity should
          resume. The CP success page should contain a string, e.g
          "CP_SATISFIED." The OS can then use this string to provide further
          information to the user.</t>

          <t>The device should (using an OS dependent method) expose to the
          user / user applications that they have connected though a captive
          portal (for example by creating a file in /proc/net/ containing the
          interface and captive portal URI). This should continue until the
          network changes, or a new DHCP message without the CP is
          received.</t>
        </list></t>
    </section>

    <section title="IANA Considerations">
      <t>This document defines DHCPv4 Captive-Portal option which requires
      assignment of DHCPv4 option code TBA1 assigned from "Bootp and DHCP
      options" registry (http://www.iana.org/assignments/
      bootp-dhcp-parameters/bootp-dhcp-parameters.xml), as specified in
      [RFC2939].</t>

      <t>IANA is also requested to assign an IPv6 RA Option Type code (TBA3)
      from the "IPv6 Neighbor Discovery Option Formats" registry. Thanks
      IANA!</t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>An attacker with the ability to inject DHCP messages could include
      this option and so force users to contact an address of his choosing. As
      an attacker with this capability could simply list himself as the
      default gateway (and so intercept all the victim's traffic), this does
      not provide them with significantly more capabilities. Fake DHCP servers
      / fake RAs are currently a security concern - this doesn't make them any
      better or worse.</t>

      <t>Devices and systems that automatically connect to an open network
      could potentially be tracked using the techniques described in this
      document (forcing the user to continually authenticate, or exposing
      their browser fingerprint.) However, similar tracking can already be
      performed with the standard captive portal mechanisms, so this technique
      does not give the attackers more capabilities.</t>

      <t>By simplifying the interaction with the captive portal systems, and
      doing away with the need for interception, we think that users will be
      less likely to disable useful security safeguards like DNSSEC
      validation, VPNs, etc. In addition, because the system knows that it is
      behind a captive portal, it can know not to send cookies, credentials,
      etc. Redirection to a portal where TLS can be used without hijacking can
      ameliorate some of the implications of connecting to a potentially
      malicious captive portal.</t>
    </section>

    <section title="Acknowledgements">
      <t>The primary author has discussed this idea with a number of folk, and
      asked them to assist by becoming co-authors. Unfortunately he has
      forgotten who many of them were; if you were one of them, I
      apologize.</t>

      <t>Thanks to Vint Cerf for the initial idea / asking me to write this.
      Thanks to Wes George for supplying the IPv6 text. Thanks to Lorenzo and
      Erik for the V6 RA kick in the pants.</t>

      <t>Thanks to Fred Baker and Asbjorn Tonnesen for detailed review and
      comments. Also great thanks to Joel Jaeggli for providing feedback and
      text.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.2119'?>
    </references>

    <section title="Changes / Author Notes.">
      <t>[RFC Editor: Please remove this section before publication ]</t>

      <t>From 06 to 07:</t>

      <t><list style="symbols">
          <t>Incoroprated a bunch of comments from Asbjorn Tonnesen</t>

          <t>Clarified that this document is only for the DHCP bits, not
          everything.</t>

          <t>CP's *can* do HTTP redirects to DNS banes, as long as they allow
          access to all needed services.</t>
        </list></t>

      <t>From 05 to 06:</t>

      <t><list style="symbols">
          <t>Integrated comments from Joel, as below</t>

          <t>Better introduction text, around the "kludgy hacks" section.</t>

          <t>Better "neither condones nor condems" text</t>

          <t>Fingerprint text.</t>

          <t>Some discussions on the v4 literal stuff.</t>

          <t>More Security Consideration text.</t>
        </list></t>

      <t>From 04 to 05:</t>

      <t><list style="symbols">
          <t>Integrated comments, primarily from Fred Baker.</t>
        </list></t>

      <t>From 03 to 04:</t>

      <t><list style="symbols">
          <t>Some text cleanup for readability.</t>

          <t>Some disclaimers about it working better on initial connection
          versus CP timeout.</t>

          <t>Some more text explaining that CP interception is
          indistinguishable from an attack.</t>

          <t>Connectivity Check test.</t>

          <t>Posting just before the draft cutoff - &ldquo;I love deadlines. I
          love the whooshing noise they make as they go by.&rdquo; &mdash;
          Douglas Adams, The Salmon of Doubt</t>
        </list></t>

      <t>From -02 to 03:</t>

      <t><list style="symbols">
          <t>Removed the DHCPv6 stuff (as suggested / requested by Erik
          Kline)</t>

          <t>Simplified / cleaned up text (I'm inclined to waffle on, then
          trim the fluff)</t>

          <t>This was written on a United flight with in-flight WiFi -
          unfortunately I couldn't use it because their CP was borked. :-P</t>
        </list></t>

      <t>From -01 to 02:</t>

      <t><list style="symbols">
          <t>Added the IPv6 RA stuff.</t>
        </list></t>

      <t>From -00 to -01:</t>

      <t><list style="symbols">
          <t>Many nits and editorial changes.</t>

          <t>Whole bunch of extra text and review from Wes George on v6.</t>
        </list></t>

      <t>From initial to -00.</t>

      <t><list style="symbols">
          <t>Nothing changed in the template!</t>
        </list></t>
    </section>
  </back>
</rfc>
